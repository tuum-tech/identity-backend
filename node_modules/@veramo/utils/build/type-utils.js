"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isIterable = exports.asArray = exports.isDefined = void 0;
/**
 * Checks if a variable is defined and not null.
 * After this check, typescript sees the variable as defined.
 *
 * @param arg - The input to be verified
 *
 * @returns true if the input variable is defined.
 *
 * @beta This API may change without a BREAKING CHANGE notice.
 */
function isDefined(arg) {
    return arg !== null && typeof arg !== 'undefined';
}
exports.isDefined = isDefined;
/**
 * Ensures that a given input is an array. If the input is a single item, it is converted to an array with a single
 * entry.
 *
 * @param arg - a variable that needs to be converted to array
 *
 * @beta This API may change without a BREAKING CHANGE notice.
 */
function asArray(arg) {
    return isDefined(arg) ? (Array.isArray(arg) ? arg : [arg]) : [];
}
exports.asArray = asArray;
/**
 * Checks if an object is iterable (can be used for `for..of`)
 * @param obj - the variable to be checked
 *
 * @beta This API may change without a BREAKING CHANGE notice.
 */
function isIterable(obj) {
    return obj != null && typeof obj[Symbol.iterator] === 'function';
}
exports.isIterable = isIterable;
//# sourceMappingURL=type-utils.js.map