import { IAgentContext, IAgentPlugin } from '@veramo/core';
import { IDIDDiscovery, IDIDDiscoveryDiscoverDidArgs, IDIDDiscoveryDiscoverDidResult } from './types';
import { AbstractDidDiscoveryProvider } from './abstract-did-discovery-provider';
/**
 * This class adds support for discovering DIDs.
 *
 * @beta This API may change without a BREAKING CHANGE notice.
 */
export declare class DIDDiscovery implements IAgentPlugin {
    readonly methods: IDIDDiscovery;
    readonly schema: any;
    readonly providers: Array<AbstractDidDiscoveryProvider>;
    constructor(options: {
        providers: Array<AbstractDidDiscoveryProvider>;
    });
    /**
     * Queries data providers and returns DIDs with metadata
     *
     * @param args - The param object with the properties necessary to discover DID
     * @param context - *RESERVED* This is filled by the framework when the method is called.
     *
     */
    discoverDid(args: IDIDDiscoveryDiscoverDidArgs, context: IAgentContext<any>): Promise<IDIDDiscoveryDiscoverDidResult>;
}
//# sourceMappingURL=action-handler.d.ts.map