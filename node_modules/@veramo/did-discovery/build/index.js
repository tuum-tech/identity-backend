"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.schema = exports.AbstractDidDiscoveryProvider = exports.DIDDiscovery = void 0;
/**
 * Provides a {@link @veramo/did-discovery#IDIDDiscovery | plugin} for the {@link @veramo/core#Agent}
 *
 * @packageDocumentation
 */
var action_handler_1 = require("./action-handler");
Object.defineProperty(exports, "DIDDiscovery", { enumerable: true, get: function () { return action_handler_1.DIDDiscovery; } });
var abstract_did_discovery_provider_1 = require("./abstract-did-discovery-provider");
Object.defineProperty(exports, "AbstractDidDiscoveryProvider", { enumerable: true, get: function () { return abstract_did_discovery_provider_1.AbstractDidDiscoveryProvider; } });
__exportStar(require("./types"), exports);
/**
 * The parameter and return type schemas for the methods of the {@link @veramo/did-discovery#DIDDiscovery} plugin.
 *
 * @beta This API may change without a BREAKING CHANGE notice.
 */
const schema = require('../plugin.schema.json');
exports.schema = schema;
//# sourceMappingURL=index.js.map