import { VerifiableCredential } from '@veramo/core';
import { BaseEntity } from 'typeorm';
import { Identifier } from './identifier';
import { Message } from './message';
import { Presentation } from './presentation';
import { Claim } from './claim';
/**
 * Represents some common properties of a Verifiable Credential that are stored in a TypeORM database for querying.
 *
 * @see {@link @veramo/core#IDataStoreORM.dataStoreORMGetVerifiableCredentials | dataStoreORMGetVerifiableCredentials}
 *   for the interface defining how this can be queried.
 *
 * @see {@link @veramo/data-store#DataStoreORM | DataStoreORM} for the implementation of the query interface.
 *
 * @see {@link @veramo/core#IDataStoreORM.dataStoreORMGetVerifiableCredentialsByClaims | dataStoreORMGetVerifiableCredentialsByClaims} for the interface defining how to query credentials by the claims they contain.
 *
 * @beta This API may change without a BREAKING CHANGE notice.
 */
export declare class Credential extends BaseEntity {
    hash: string;
    private _raw;
    set raw(raw: VerifiableCredential);
    get raw(): VerifiableCredential;
    issuer: Identifier;
    subject?: Identifier;
    id?: string;
    issuanceDate: Date;
    expirationDate?: Date;
    context: string[];
    type: string[];
    claims: Claim[];
    presentations: Presentation[];
    messages: Message[];
}
export declare const createCredentialEntity: (vci: VerifiableCredential) => Credential;
//# sourceMappingURL=credential.d.ts.map